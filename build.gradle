group 'br.com.beblue.bluerecords'
version '0.0.1'
description = "API para consulta e vendas de discos de vinil"

buildscript {
    ext.artifactId = 'bluerecords'
    ext.kotlin_version = '1.3.61'
    ext.archive_extension = 'jar'
    ext.archive_file_name = "${artifactId}.${archive_extension}"
    ext.jacoco_palantir_version = '0.4.0'

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.palantir:jacoco-coverage:$jacoco_palantir_version"
    }
}

apply plugin: 'jacoco'
apply plugin: 'com.palantir.jacoco-full-report'

jacoco {
    toolVersion = "0.8.3"
}

allprojects {
    repositories {
        mavenCentral()
        jcenter()
    }
}

subprojects {
    ext {
        versions = [
                junit         : "5.3.2",
                assertj       : "3.11.1",
                spring        : "2.1.7.RELEASE",
                mysql         : "5.1.46",
                h2            : '1.4.199',
                flyway        : '5.2.4',
                jackson_kotlin: '2.9.7',
                swagger       : '2.9.2',
                mockk         : '3.2.4',
                khttp         : '1.0.0',
                spotify       : '4.2.0',
                cache         : '2.8.0',
        ]

        libs = [
                spring_test  : [
                        "org.springframework.boot:spring-boot-starter-test:${versions.spring}",
                ],
                unit_test    : [
                        "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
                        "org.junit.jupiter:junit-jupiter-params:${versions.junit}",
                        "org.junit.jupiter:junit-jupiter-engine:${versions.junit}",
                        "org.mockito:mockito-core:${versions.mockk}",
                ],
                spring_config: [
                        "org.springframework.boot:spring-boot-starter-web:${versions.spring}",
                        "com.fasterxml.jackson.module:jackson-module-kotlin:${versions.jackson_kotlin}",
                        "org.springframework.boot:spring-boot-configuration-processor:${versions.spring}",
                        "io.springfox:springfox-swagger2:${versions.swagger}",
                        "org.springframework.boot:spring-boot-starter-amqp:${versions.spring}"
                ],
                cacheable    : [
                        "org.springframework.boot:spring-boot-starter-cache:${versions.spring}",
                        "com.github.ben-manes.caffeine:caffeine:${versions.cache}",
                        "com.github.ben-manes.caffeine:guava:${versions.cache}",
                        "com.github.ben-manes.caffeine:jcache:${versions.cache}",
                ],
                rest         : [
                        "org.springframework.boot:spring-boot-starter-web:${versions.spring}",
                        "io.springfox:springfox-swagger-ui:${versions.swagger}",
                        "io.springfox:springfox-swagger2:${versions.swagger}",

                ],
                database     : [
                        "org.springframework.boot:spring-boot-starter-jdbc:${versions.spring}",
                        "com.h2database:h2:${versions.h2}",
                        "org.flywaydb:flyway-core:${versions.flyway}",
                ],
                api_spotify : [
                        "se.michaelthelin.spotify:spotify-web-api-java:${versions.spotify}"
                ],
        ]
    }
}

configure(allprojects - project(":application")) {
    apply plugin: "java"
    apply plugin: "kotlin"
    apply plugin: "org.jetbrains.kotlin.jvm"
    apply plugin: 'jacoco'

    compileKotlin {
        kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
        kotlinOptions.javaParameters = true
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
        kotlinOptions.javaParameters = true
    }

    test {
        useJUnitPlatform() {
            excludeTags("integration")
        }
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    }
}

task jacocoMergeTest(type: JacocoMerge) {
    destinationFile = file("$buildDir/jacoco/all-test.exec")
    executionData = project.fileTree(dir: '.', include: '**/build/jacoco/test.exec')
}

wrapper {
    gradleVersion = '5.5.1'
}